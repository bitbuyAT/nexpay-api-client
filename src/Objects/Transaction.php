<?php

namespace bitbuyAT\Nexpay\Objects;

class Transaction
{
    /**
     * @var array
     */
    protected $data;

    public function __construct(array $data)
    {
        $this->data = $data;
    }

    /**
     * Transaction code on the exchange.
     */
    public function transactionCode(): string
    {
        return $this->data['transactionCode'];
    }

    /**
     *Transaction ID generated by client.
     */
    public function clientTransId(): string
    {
        return $this->data['clientTransId'] ?? '';
    }

    /**
     * Transaction creation date. Unix time with precision in seconds.
     */
    public function created(): int
    {
        return $this->data['created'];
    }

    /**
     * Direction of the payment transaction.
     */
    public function direction(): string
    {
        return $this->data['direction'];
    }

    /**
     * Payment types with the following values:
     * - internal â€“ transfer between the client internal accounts
     * - exchange â€“ payment to or from the other beneficiary account in the exchange
     * - crypto â€“ cryptocurrency payment
     * - bank â€“ bank transfer.
     */
    public function paymentType(): string
    {
        return $this->data['paymentType'];
    }

    /**
     * Own account number in the exchange on which the transaction was made.
     */
    public function account(): string
    {
        return $this->data['account'];
    }

    /**
     * Currency symbol, e.g. EUR.
     */
    public function currency(): string
    {
        return $this->data['currency'];
    }

    /**
     * Amount of money that was requested for withdrawal or received via wire transfer.
     */
    public function amount(): string
    {
        return $this->data['amount'];
    }

    /**
     * Transaction status.
     */
    public function status(): string
    {
        return $this->data['status'];
    }

    /**
     * Cryptocurrency transaction hash.
     */
    public function transactionHash(): string
    {
        return $this->data['transactionHash'] ?? '';
    }

    /**
     * Beneficiary cryptocurrency address or Nexpay cryptocurrency address used for deposits.
     */
    public function coinAddress(): string
    {
        return $this->data['coinAddress'] ?? '';
    }

    /**
     * Whole data array.
     */
    public function getData(): array
    {
        return $this->data;
    }
}
